tags:
  - name: "Employee"
    description: "Employee resource"
  - name: "Department"
    description: "Department resource"
  
paths:
  /departments:
    get:
      tags:
        - "Department"
      summary: Get all department objects
      produces:
        - application/json
      responses:
        200:
          description: An object with department detail
  /employees:
    post:
      tags:
        - "Employee"
      summary: "Add a new employee"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: "body"
          name: "body"
          description: "New employee json payload"
          required: true
          schema:
            $ref: "#/definitions/Employee"
      responses:
        201:
          description: "Employee object successfully created."
          schema:
            $ref: "#/definitions/Employee"
        409:
          description: "Employee object already exist."
        500:
          description: "Unexpected error occurred. Internal server error."
    get:
      tags:
        - "Employee"
      summary: Get all employee objects
      produces:
        - application/json
      responses:
        200:
          description: An object with employee detail
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EmployeeResponse"
  /employees/{employeeId}:
    get:
      tags:
        - "Employee"
      summary: Get employee by ID
      parameters:
        - in: path
          name: employeeId
          schema:
            type: integer
          required: true
          description: Numeric ID of the employee to get
      responses:
        200:
          description: "Employee object successfully created."
          schema:
            $ref: "#/definitions/EmployeeResponse"
        404:
          description: "Employee object not found."
        500:
          description: "Unexpected error occurred. Internal server error."

definitions:
  Employee:
    type: object
    required:
      - employeeId
      - firstName
      - lastName
      - email
      - hireDate
      - salary
      - jobId
    properties:
      employeeId:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phoneNumber:
        type: string
      hireDate:
        type: string
        format: date
      jobId:
        type: string
      salary:
        type: number
        format: float
      commissionPercentage:
        type: number
        format: float
      managerId:
        type: integer
      departmentId:
        type: integer
  DepartmentResponse:
    type: object
    properties:
      departmentId:
        type: integer
      departmentName:
        type: string
      managerId:
        type: integer
      locationId:
        type: integer
  EmployeeResponse:
    type: object
    properties:
      employeeId:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phoneNumber:
        type: string
      hireDate:
        type: string
        format: date
      jobId:
        type: string
      salary:
        type: number
        format: float
      commissionPercentage:
        type: number
        format: float
      managerId:
        type: integer
      departmentId:
        type: integer
      department:
        $ref: "#/definitions/DepartmentResponse"
